/*
 * This file was automatically generated by EvoSuite
 * Wed Feb 12 15:23:41 GMT 2025
 */

package com.rems.boot.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import com.rems.boot.entity.PopularNavEntity;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PopularNavEntity_ESTest extends PopularNavEntity_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PopularNavEntity.PopularNavEntityBuilder popularNavEntity_PopularNavEntityBuilder0 = new PopularNavEntity.PopularNavEntityBuilder();
      PopularNavEntity popularNavEntity0 = popularNavEntity_PopularNavEntityBuilder0.build();
      MockDate mockDate0 = new MockDate(0L);
      popularNavEntity0.setUpdateTime(mockDate0);
      popularNavEntity0.hashCode();
      assertEquals(0, popularNavEntity0.getNavHeat());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PopularNavEntity.PopularNavEntityBuilder popularNavEntity_PopularNavEntityBuilder0 = new PopularNavEntity.PopularNavEntityBuilder();
      PopularNavEntity.PopularNavEntityBuilder popularNavEntity_PopularNavEntityBuilder1 = popularNavEntity_PopularNavEntityBuilder0.navName(",*PmR6cd4_");
      PopularNavEntity popularNavEntity0 = popularNavEntity_PopularNavEntityBuilder1.build();
      popularNavEntity0.hashCode();
      assertEquals(0, popularNavEntity0.getNavHeat());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Integer integer0 = new Integer(0);
      MockDate mockDate0 = new MockDate();
      PopularNavEntity popularNavEntity0 = new PopularNavEntity(integer0, "", "", 1327, mockDate0, mockDate0);
      popularNavEntity0.hashCode();
      assertEquals(1327, popularNavEntity0.getNavHeat());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PopularNavEntity popularNavEntity0 = new PopularNavEntity();
      popularNavEntity0.setNavHeat(1);
      PopularNavEntity popularNavEntity1 = new PopularNavEntity();
      boolean boolean0 = popularNavEntity0.equals(popularNavEntity1);
      assertEquals(1, popularNavEntity0.getNavHeat());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Integer integer0 = new Integer(2673);
      MockDate mockDate0 = new MockDate();
      PopularNavEntity popularNavEntity0 = new PopularNavEntity(integer0, "", "!cSYKfc7V", 2673, mockDate0, mockDate0);
      popularNavEntity0.getUpdateTime();
      assertEquals("", popularNavEntity0.getNavNum());
      assertEquals(2673, popularNavEntity0.getNavHeat());
      assertEquals("!cSYKfc7V", popularNavEntity0.getNavName());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PopularNavEntity popularNavEntity0 = new PopularNavEntity();
      String string0 = popularNavEntity0.getNavNum();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PopularNavEntity popularNavEntity0 = new PopularNavEntity();
      popularNavEntity0.setNavName("m~aHgm^tx0M>'Epj*");
      String string0 = popularNavEntity0.getNavName();
      assertEquals("m~aHgm^tx0M>'Epj*", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Integer integer0 = new Integer(2187);
      MockDate mockDate0 = new MockDate(2187, (-1165), 1735, 0, 2187, 2187);
      PopularNavEntity popularNavEntity0 = new PopularNavEntity(integer0, "", "", 2187, mockDate0, mockDate0);
      popularNavEntity0.getNavName();
      assertEquals(2187, popularNavEntity0.getNavHeat());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-1078), (-1737), (-1078), (-1737), (-1737));
      Integer integer0 = new Integer(893);
      PopularNavEntity popularNavEntity0 = new PopularNavEntity(integer0, "qo'e8tMu\"P1Y-P", "{,SgGcweXDQ%:0", 253, mockDate0, mockDate0);
      int int0 = popularNavEntity0.getNavHeat();
      assertEquals(253, int0);
      assertEquals("{,SgGcweXDQ%:0", popularNavEntity0.getNavName());
      assertEquals("qo'e8tMu\"P1Y-P", popularNavEntity0.getNavNum());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-1180), (-1180), (-1180), 0, 0);
      Integer integer0 = new Integer(2445);
      PopularNavEntity popularNavEntity0 = new PopularNavEntity(integer0, "", "", (-3030), mockDate0, mockDate0);
      int int0 = popularNavEntity0.getNavHeat();
      assertEquals((-3030), int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-296), (-90), 0);
      Integer integer0 = new Integer(0);
      PopularNavEntity popularNavEntity0 = new PopularNavEntity(integer0, "(VHo`kMjw:!tq'@!Wk@", "(VHo`kMjw:!tq'@!Wk@", (-296), mockDate0, mockDate0);
      popularNavEntity0.getId();
      assertEquals((-296), popularNavEntity0.getNavHeat());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Integer integer0 = new Integer(59);
      PopularNavEntity popularNavEntity0 = new PopularNavEntity(integer0, "", (String) null, 59, (Date) null, (Date) null);
      popularNavEntity0.getId();
      assertEquals(59, popularNavEntity0.getNavHeat());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PopularNavEntity.PopularNavEntityBuilder popularNavEntity_PopularNavEntityBuilder0 = PopularNavEntity.builder();
      Integer integer0 = new Integer((-2620));
      popularNavEntity_PopularNavEntityBuilder0.id(integer0);
      PopularNavEntity popularNavEntity0 = popularNavEntity_PopularNavEntityBuilder0.build();
      popularNavEntity0.getId();
      assertEquals(0, popularNavEntity0.getNavHeat());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Integer integer0 = Integer.valueOf(507);
      MockDate mockDate0 = new MockDate((-1550), (-231), 59, 1991, 1, 507);
      PopularNavEntity popularNavEntity0 = new PopularNavEntity(integer0, "iYj>#(F", "iYj>#(F", 551, mockDate0, mockDate0);
      popularNavEntity0.getCreateTime();
      assertEquals(551, popularNavEntity0.getNavHeat());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Integer integer0 = new Integer(715);
      MockDate mockDate0 = new MockDate((-2505L));
      PopularNavEntity popularNavEntity0 = new PopularNavEntity(integer0, "", "", 1, mockDate0, mockDate0);
      popularNavEntity0.canEqual(popularNavEntity0);
      assertEquals(1, popularNavEntity0.getNavHeat());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PopularNavEntity.PopularNavEntityBuilder popularNavEntity_PopularNavEntityBuilder0 = new PopularNavEntity.PopularNavEntityBuilder();
      PopularNavEntity popularNavEntity0 = popularNavEntity_PopularNavEntityBuilder0.build();
      popularNavEntity0.canEqual(",*PmR6cd4_");
      assertEquals(0, popularNavEntity0.getNavHeat());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PopularNavEntity popularNavEntity0 = new PopularNavEntity();
      Integer integer0 = popularNavEntity0.getId();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PopularNavEntity popularNavEntity0 = new PopularNavEntity();
      String string0 = popularNavEntity0.getNavName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-1078), (-1737), (-1078), (-1737), (-1737));
      Integer integer0 = new Integer(893);
      PopularNavEntity popularNavEntity0 = new PopularNavEntity(integer0, "qo'e8tMu\"P1Y-P", "{,SgGcweXDQ%:0", 253, mockDate0, mockDate0);
      String string0 = popularNavEntity0.getNavNum();
      assertEquals(253, popularNavEntity0.getNavHeat());
      assertEquals("qo'e8tMu\"P1Y-P", string0);
      assertEquals("{,SgGcweXDQ%:0", popularNavEntity0.getNavName());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PopularNavEntity popularNavEntity0 = new PopularNavEntity();
      int int0 = popularNavEntity0.getNavHeat();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PopularNavEntity popularNavEntity0 = new PopularNavEntity();
      Date date0 = popularNavEntity0.getUpdateTime();
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PopularNavEntity popularNavEntity0 = new PopularNavEntity();
      Date date0 = popularNavEntity0.getCreateTime();
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      MockDate mockDate0 = new MockDate(59, (-337), 59, (-337), (-2623));
      PopularNavEntity popularNavEntity0 = new PopularNavEntity();
      popularNavEntity0.setUpdateTime(mockDate0);
      PopularNavEntity popularNavEntity1 = new PopularNavEntity();
      boolean boolean0 = popularNavEntity0.equals(popularNavEntity1);
      assertEquals(0, popularNavEntity1.getNavHeat());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PopularNavEntity popularNavEntity0 = new PopularNavEntity();
      MockDate mockDate0 = new MockDate();
      popularNavEntity0.setCreateTime(mockDate0);
      PopularNavEntity popularNavEntity1 = new PopularNavEntity();
      assertFalse(popularNavEntity1.equals((Object)popularNavEntity0));
      
      popularNavEntity1.setCreateTime(mockDate0);
      boolean boolean0 = popularNavEntity0.equals(popularNavEntity1);
      assertTrue(popularNavEntity1.equals((Object)popularNavEntity0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      PopularNavEntity popularNavEntity0 = new PopularNavEntity();
      MockDate mockDate0 = new MockDate();
      popularNavEntity0.setCreateTime(mockDate0);
      PopularNavEntity popularNavEntity1 = new PopularNavEntity();
      boolean boolean0 = popularNavEntity1.equals(popularNavEntity0);
      assertFalse(boolean0);
      assertEquals(0, popularNavEntity1.getNavHeat());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      PopularNavEntity popularNavEntity0 = new PopularNavEntity();
      popularNavEntity0.setNavName("9;?r5ulp)zZ04h:(");
      PopularNavEntity popularNavEntity1 = new PopularNavEntity();
      assertFalse(popularNavEntity1.equals((Object)popularNavEntity0));
      
      popularNavEntity1.setNavName("9;?r5ulp)zZ04h:(");
      boolean boolean0 = popularNavEntity0.equals(popularNavEntity1);
      assertTrue(popularNavEntity1.equals((Object)popularNavEntity0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      PopularNavEntity popularNavEntity0 = new PopularNavEntity();
      PopularNavEntity popularNavEntity1 = new PopularNavEntity();
      assertTrue(popularNavEntity1.equals((Object)popularNavEntity0));
      
      popularNavEntity1.setNavName("");
      boolean boolean0 = popularNavEntity0.equals(popularNavEntity1);
      assertFalse(popularNavEntity1.equals((Object)popularNavEntity0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      PopularNavEntity popularNavEntity0 = new PopularNavEntity();
      popularNavEntity0.setNavName(";gz_FQ");
      PopularNavEntity popularNavEntity1 = new PopularNavEntity();
      boolean boolean0 = popularNavEntity0.equals(popularNavEntity1);
      assertEquals(0, popularNavEntity1.getNavHeat());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      PopularNavEntity popularNavEntity0 = new PopularNavEntity();
      popularNavEntity0.setNavNum("!GA'");
      PopularNavEntity popularNavEntity1 = new PopularNavEntity();
      assertFalse(popularNavEntity1.equals((Object)popularNavEntity0));
      
      popularNavEntity1.setNavNum("!GA'");
      boolean boolean0 = popularNavEntity1.equals(popularNavEntity0);
      assertTrue(popularNavEntity1.equals((Object)popularNavEntity0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      PopularNavEntity popularNavEntity0 = new PopularNavEntity();
      PopularNavEntity popularNavEntity1 = new PopularNavEntity();
      assertTrue(popularNavEntity1.equals((Object)popularNavEntity0));
      
      popularNavEntity1.setNavNum("$h}@JS9tvgPSSm");
      boolean boolean0 = popularNavEntity0.equals(popularNavEntity1);
      assertFalse(popularNavEntity1.equals((Object)popularNavEntity0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      PopularNavEntity popularNavEntity0 = new PopularNavEntity();
      PopularNavEntity popularNavEntity1 = new PopularNavEntity();
      assertTrue(popularNavEntity1.equals((Object)popularNavEntity0));
      
      Integer integer0 = new Integer((-3101));
      popularNavEntity1.setId(integer0);
      boolean boolean0 = popularNavEntity0.equals(popularNavEntity1);
      assertFalse(popularNavEntity1.equals((Object)popularNavEntity0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      PopularNavEntity popularNavEntity0 = new PopularNavEntity();
      PopularNavEntity popularNavEntity1 = new PopularNavEntity();
      popularNavEntity1.setNavHeat(454);
      boolean boolean0 = popularNavEntity0.equals(popularNavEntity1);
      assertEquals(454, popularNavEntity1.getNavHeat());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      PopularNavEntity popularNavEntity0 = new PopularNavEntity();
      PopularNavEntity.PopularNavEntityBuilder popularNavEntity_PopularNavEntityBuilder0 = PopularNavEntity.builder();
      boolean boolean0 = popularNavEntity0.equals(popularNavEntity_PopularNavEntityBuilder0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      PopularNavEntity popularNavEntity0 = new PopularNavEntity();
      boolean boolean0 = popularNavEntity0.equals(popularNavEntity0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      PopularNavEntity.PopularNavEntityBuilder popularNavEntity_PopularNavEntityBuilder0 = new PopularNavEntity.PopularNavEntityBuilder();
      MockDate mockDate0 = new MockDate();
      PopularNavEntity.PopularNavEntityBuilder popularNavEntity_PopularNavEntityBuilder1 = popularNavEntity_PopularNavEntityBuilder0.updateTime(mockDate0);
      PopularNavEntity popularNavEntity0 = popularNavEntity_PopularNavEntityBuilder1.build();
      PopularNavEntity popularNavEntity1 = popularNavEntity_PopularNavEntityBuilder1.build();
      boolean boolean0 = popularNavEntity0.equals(popularNavEntity1);
      assertEquals(0, popularNavEntity1.getNavHeat());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      PopularNavEntity.PopularNavEntityBuilder popularNavEntity_PopularNavEntityBuilder0 = new PopularNavEntity.PopularNavEntityBuilder();
      String string0 = popularNavEntity_PopularNavEntityBuilder0.toString();
      assertEquals("PopularNavEntity.PopularNavEntityBuilder(id=null, navNum=null, navName=null, navHeat=0, createTime=null, updateTime=null)", string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      PopularNavEntity.PopularNavEntityBuilder popularNavEntity_PopularNavEntityBuilder0 = new PopularNavEntity.PopularNavEntityBuilder();
      MockDate mockDate0 = new MockDate();
      PopularNavEntity.PopularNavEntityBuilder popularNavEntity_PopularNavEntityBuilder1 = popularNavEntity_PopularNavEntityBuilder0.createTime(mockDate0);
      assertSame(popularNavEntity_PopularNavEntityBuilder0, popularNavEntity_PopularNavEntityBuilder1);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      PopularNavEntity.PopularNavEntityBuilder popularNavEntity_PopularNavEntityBuilder0 = new PopularNavEntity.PopularNavEntityBuilder();
      popularNavEntity_PopularNavEntityBuilder0.navNum("");
      PopularNavEntity popularNavEntity0 = popularNavEntity_PopularNavEntityBuilder0.build();
      String string0 = popularNavEntity0.getNavNum();
      assertEquals(0, popularNavEntity0.getNavHeat());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      PopularNavEntity.PopularNavEntityBuilder popularNavEntity_PopularNavEntityBuilder0 = PopularNavEntity.builder();
      Integer integer0 = new Integer(1);
      popularNavEntity_PopularNavEntityBuilder0.id(integer0);
      PopularNavEntity popularNavEntity0 = popularNavEntity_PopularNavEntityBuilder0.build();
      PopularNavEntity popularNavEntity1 = popularNavEntity_PopularNavEntityBuilder0.build();
      boolean boolean0 = popularNavEntity0.equals(popularNavEntity1);
      assertTrue(boolean0);
      assertEquals(0, popularNavEntity1.getNavHeat());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      PopularNavEntity.PopularNavEntityBuilder popularNavEntity_PopularNavEntityBuilder0 = new PopularNavEntity.PopularNavEntityBuilder();
      PopularNavEntity.PopularNavEntityBuilder popularNavEntity_PopularNavEntityBuilder1 = popularNavEntity_PopularNavEntityBuilder0.navHeat(1928);
      assertSame(popularNavEntity_PopularNavEntityBuilder0, popularNavEntity_PopularNavEntityBuilder1);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      PopularNavEntity popularNavEntity0 = new PopularNavEntity();
      popularNavEntity0.setNavNum("fQ");
      PopularNavEntity popularNavEntity1 = new PopularNavEntity();
      boolean boolean0 = popularNavEntity0.equals(popularNavEntity1);
      assertEquals(0, popularNavEntity1.getNavHeat());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      PopularNavEntity popularNavEntity0 = new PopularNavEntity();
      MockDate mockDate0 = new MockDate();
      popularNavEntity0.setCreateTime(mockDate0);
      PopularNavEntity popularNavEntity1 = new PopularNavEntity();
      boolean boolean0 = popularNavEntity0.equals(popularNavEntity1);
      assertEquals(0, popularNavEntity1.getNavHeat());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      PopularNavEntity.PopularNavEntityBuilder popularNavEntity_PopularNavEntityBuilder0 = new PopularNavEntity.PopularNavEntityBuilder();
      PopularNavEntity popularNavEntity0 = popularNavEntity_PopularNavEntityBuilder0.build();
      String string0 = popularNavEntity0.toString();
      assertEquals("PopularNavEntity(id=null, navNum=null, navName=null, navHeat=0, createTime=null, updateTime=null)", string0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      PopularNavEntity popularNavEntity0 = new PopularNavEntity();
      MockDate mockDate0 = new MockDate();
      popularNavEntity0.setUpdateTime(mockDate0);
      PopularNavEntity popularNavEntity1 = new PopularNavEntity();
      boolean boolean0 = popularNavEntity1.equals(popularNavEntity0);
      assertFalse(boolean0);
      assertEquals(0, popularNavEntity1.getNavHeat());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      PopularNavEntity popularNavEntity0 = new PopularNavEntity();
      Integer integer0 = new Integer((-224));
      popularNavEntity0.setId(integer0);
      PopularNavEntity popularNavEntity1 = new PopularNavEntity();
      boolean boolean0 = popularNavEntity0.equals(popularNavEntity1);
      assertEquals(0, popularNavEntity1.getNavHeat());
      assertFalse(boolean0);
  }
}
