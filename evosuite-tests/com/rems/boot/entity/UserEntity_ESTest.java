/*
 * This file was automatically generated by EvoSuite
 * Wed Feb 12 15:50:56 GMT 2025
 */

package com.rems.boot.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import com.rems.boot.entity.UserEntity;
import com.rems.boot.enums.GenderEnum;
import com.rems.boot.enums.UserStatusEnum;
import com.rems.boot.enums.UserTypeEnum;
import java.time.Instant;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class UserEntity_ESTest extends UserEntity_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      UserStatusEnum userStatusEnum0 = UserStatusEnum.INACTIVE;
      GenderEnum genderEnum0 = GenderEnum.MALE;
      UserTypeEnum userTypeEnum0 = UserTypeEnum.ADMIN;
      MockDate mockDate0 = new MockDate(1L);
      UserEntity userEntity0 = new UserEntity((Integer) null, "UserEntity(id=null, username=null, nickname=null, password=null, gender=null, avatar=null, email=null, mobile=null, status=null, role=null, remark=null, createTime=null, updateTime=null)", "", "_-oIrV~4", genderEnum0, "gixIU4Lq|Ws{o", "UserEntity(id=null, username=null, nickname=null, password=null, gender=null, avatar=null, email=null, mobile=null, status=null, role=null, remark=null, createTime=null, updateTime=null)", "", userStatusEnum0, userTypeEnum0, "", mockDate0, mockDate0);
      userEntity0.hashCode();
      assertEquals("UserEntity(id=null, username=null, nickname=null, password=null, gender=null, avatar=null, email=null, mobile=null, status=null, role=null, remark=null, createTime=null, updateTime=null)", userEntity0.getUsername());
      assertEquals("", userEntity0.getRemark());
      assertEquals("UserEntity(id=null, username=null, nickname=null, password=null, gender=null, avatar=null, email=null, mobile=null, status=null, role=null, remark=null, createTime=null, updateTime=null)", userEntity0.getEmail());
      assertEquals("gixIU4Lq|Ws{o", userEntity0.getAvatar());
      assertEquals("", userEntity0.getMobile());
      assertEquals("", userEntity0.getNickname());
      assertEquals("_-oIrV~4", userEntity0.getPassword());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      UserEntity.UserEntityBuilder userEntity_UserEntityBuilder0 = UserEntity.builder();
      UserEntity.UserEntityBuilder userEntity_UserEntityBuilder1 = userEntity_UserEntityBuilder0.username("ACTIVE");
      UserEntity userEntity0 = userEntity_UserEntityBuilder1.build();
      String string0 = userEntity0.getUsername();
      assertEquals("ACTIVE", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      UserEntity.UserEntityBuilder userEntity_UserEntityBuilder0 = new UserEntity.UserEntityBuilder();
      UserEntity.UserEntityBuilder userEntity_UserEntityBuilder1 = userEntity_UserEntityBuilder0.username("");
      UserEntity userEntity0 = userEntity_UserEntityBuilder1.build();
      String string0 = userEntity0.getUsername();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      UserEntity.UserEntityBuilder userEntity_UserEntityBuilder0 = new UserEntity.UserEntityBuilder();
      UserEntity userEntity0 = userEntity_UserEntityBuilder0.build();
      MockDate mockDate0 = new MockDate(0, 0, 0, 0, 0);
      userEntity0.setUpdateTime(mockDate0);
      Date date0 = userEntity0.getUpdateTime();
      assertSame(date0, mockDate0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      UserEntity userEntity0 = new UserEntity();
      userEntity0.getStatus();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Integer integer0 = new Integer(0);
      GenderEnum genderEnum0 = GenderEnum.OTHER;
      UserStatusEnum userStatusEnum0 = UserStatusEnum.PENDING;
      UserTypeEnum userTypeEnum0 = UserTypeEnum.USER;
      MockDate mockDate0 = new MockDate((-1135), (-1135), (-677), (-1135), (-1012));
      UserEntity userEntity0 = new UserEntity(integer0, "7T2:upb@i-I$_F>\"0HB", ", avatar=", ", avatar=", genderEnum0, "G\u0007", "a&e,3", "x-N}/1aOvU zfN{Yp.X", userStatusEnum0, userTypeEnum0, "a&e,3", mockDate0, mockDate0);
      userEntity0.getRole();
      assertEquals("7T2:upb@i-I$_F>\"0HB", userEntity0.getUsername());
      assertEquals("x-N}/1aOvU zfN{Yp.X", userEntity0.getMobile());
      assertEquals("a&e,3", userEntity0.getEmail());
      assertEquals(", avatar=", userEntity0.getNickname());
      assertEquals(", avatar=", userEntity0.getPassword());
      assertEquals("G\u0007", userEntity0.getAvatar());
      assertEquals("a&e,3", userEntity0.getRemark());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      UserEntity.UserEntityBuilder userEntity_UserEntityBuilder0 = new UserEntity.UserEntityBuilder();
      UserEntity userEntity0 = userEntity_UserEntityBuilder0.build();
      userEntity0.setRemark("'BA2dwVnu");
      String string0 = userEntity0.getRemark();
      assertEquals("'BA2dwVnu", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Integer integer0 = new Integer(2221);
      UserTypeEnum userTypeEnum0 = UserTypeEnum.USER;
      GenderEnum genderEnum0 = GenderEnum.OTHER;
      MockDate mockDate0 = new MockDate(2221);
      UserStatusEnum userStatusEnum0 = UserStatusEnum.PENDING;
      UserEntity userEntity0 = new UserEntity(integer0, ", email=", "rYf$Jcs1=nxEG", "G^GhSeX$`IO:ODJ9qp", genderEnum0, "G^GhSeX$`IO:ODJ9qp", "WD}SiQ8\"<", "7IQ", userStatusEnum0, userTypeEnum0, "", mockDate0, mockDate0);
      String string0 = userEntity0.getRemark();
      assertEquals("rYf$Jcs1=nxEG", userEntity0.getNickname());
      assertEquals("", string0);
      assertEquals(", email=", userEntity0.getUsername());
      assertEquals("G^GhSeX$`IO:ODJ9qp", userEntity0.getAvatar());
      assertEquals("WD}SiQ8\"<", userEntity0.getEmail());
      assertEquals("7IQ", userEntity0.getMobile());
      assertEquals("G^GhSeX$`IO:ODJ9qp", userEntity0.getPassword());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      UserEntity.UserEntityBuilder userEntity_UserEntityBuilder0 = new UserEntity.UserEntityBuilder();
      UserEntity userEntity0 = userEntity_UserEntityBuilder0.build();
      userEntity0.setPassword("{c~i");
      String string0 = userEntity0.getPassword();
      assertEquals("{c~i", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      UserEntity.UserEntityBuilder userEntity_UserEntityBuilder0 = new UserEntity.UserEntityBuilder();
      userEntity_UserEntityBuilder0.password("");
      UserEntity userEntity0 = userEntity_UserEntityBuilder0.build();
      String string0 = userEntity0.getPassword();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      UserEntity.UserEntityBuilder userEntity_UserEntityBuilder0 = UserEntity.builder();
      userEntity_UserEntityBuilder0.nickname("\u7BA1\u7406\u5458");
      UserEntity userEntity0 = userEntity_UserEntityBuilder0.build();
      String string0 = userEntity0.getNickname();
      assertEquals("\u7BA1\u7406\u5458", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      UserEntity.UserEntityBuilder userEntity_UserEntityBuilder0 = new UserEntity.UserEntityBuilder();
      UserEntity userEntity0 = userEntity_UserEntityBuilder0.build();
      userEntity0.setNickname("");
      String string0 = userEntity0.getNickname();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      UserEntity.UserEntityBuilder userEntity_UserEntityBuilder0 = new UserEntity.UserEntityBuilder();
      userEntity_UserEntityBuilder0.mobile(", status=");
      UserEntity userEntity0 = userEntity_UserEntityBuilder0.build();
      String string0 = userEntity0.getMobile();
      assertEquals(", status=", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Integer integer0 = Integer.getInteger("&x", (Integer) null);
      GenderEnum genderEnum0 = GenderEnum.OTHER;
      UserStatusEnum userStatusEnum0 = UserStatusEnum.INACTIVE;
      UserTypeEnum userTypeEnum0 = UserTypeEnum.ADMIN;
      Instant instant0 = MockInstant.ofEpochSecond((long) 1, 1L);
      Date date0 = Date.from(instant0);
      UserEntity userEntity0 = new UserEntity(integer0, "`hCQh#", ", nickname=", "`hCQh#", genderEnum0, ", nickname=", "`hCQh#", "", userStatusEnum0, userTypeEnum0, "", date0, date0);
      String string0 = userEntity0.getMobile();
      assertEquals(", nickname=", userEntity0.getNickname());
      assertEquals("`hCQh#", userEntity0.getEmail());
      assertEquals(", nickname=", userEntity0.getAvatar());
      assertEquals("", userEntity0.getRemark());
      assertEquals("`hCQh#", userEntity0.getPassword());
      assertEquals("", string0);
      assertEquals("`hCQh#", userEntity0.getUsername());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      GenderEnum genderEnum0 = GenderEnum.OTHER;
      UserStatusEnum userStatusEnum0 = UserStatusEnum.ACTIVE;
      Instant instant0 = MockInstant.now();
      Date date0 = Date.from(instant0);
      Integer integer0 = new Integer(0);
      UserTypeEnum userTypeEnum0 = UserTypeEnum.USER;
      UserEntity userEntity0 = new UserEntity(integer0, (String) null, (String) null, (String) null, genderEnum0, "Q6}o]", ":4.|vl?\"u]wc:{7Td", (String) null, userStatusEnum0, userTypeEnum0, ":4.|vl?\"u]wc:{7Td", date0, date0);
      userEntity0.getId();
      assertEquals("Q6}o]", userEntity0.getAvatar());
      assertEquals(":4.|vl?\"u]wc:{7Td", userEntity0.getRemark());
      assertEquals(":4.|vl?\"u]wc:{7Td", userEntity0.getEmail());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      UserEntity.UserEntityBuilder userEntity_UserEntityBuilder0 = UserEntity.builder();
      UserEntity userEntity0 = userEntity_UserEntityBuilder0.build();
      Integer integer0 = userEntity0.getId();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      UserEntity.UserEntityBuilder userEntity_UserEntityBuilder0 = new UserEntity.UserEntityBuilder();
      Integer integer0 = new Integer((-2729));
      userEntity_UserEntityBuilder0.id(integer0);
      UserEntity userEntity0 = userEntity_UserEntityBuilder0.build();
      Integer integer1 = userEntity0.getId();
      assertEquals((-2729), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      UserEntity.UserEntityBuilder userEntity_UserEntityBuilder0 = UserEntity.builder();
      UserEntity userEntity0 = userEntity_UserEntityBuilder0.build();
      GenderEnum genderEnum0 = GenderEnum.FEMALE;
      userEntity0.setGender(genderEnum0);
      GenderEnum genderEnum1 = userEntity0.getGender();
      assertEquals("\u5973", genderEnum1.getDesc());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      UserEntity.UserEntityBuilder userEntity_UserEntityBuilder0 = new UserEntity.UserEntityBuilder();
      userEntity_UserEntityBuilder0.email(" ");
      UserEntity userEntity0 = userEntity_UserEntityBuilder0.build();
      String string0 = userEntity0.getEmail();
      assertEquals(" ", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      UserEntity.UserEntityBuilder userEntity_UserEntityBuilder0 = UserEntity.builder();
      UserEntity.UserEntityBuilder userEntity_UserEntityBuilder1 = userEntity_UserEntityBuilder0.email("");
      UserEntity userEntity0 = userEntity_UserEntityBuilder1.build();
      String string0 = userEntity0.getEmail();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      UserEntity.UserEntityBuilder userEntity_UserEntityBuilder0 = new UserEntity.UserEntityBuilder();
      userEntity_UserEntityBuilder0.avatar(", createTime=");
      UserEntity userEntity0 = userEntity_UserEntityBuilder0.build();
      String string0 = userEntity0.getAvatar();
      assertEquals(", createTime=", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-2296L));
      GenderEnum genderEnum0 = GenderEnum.OTHER;
      Integer integer0 = new Integer(2659);
      UserTypeEnum userTypeEnum0 = UserTypeEnum.STUDENT;
      UserStatusEnum userStatusEnum0 = UserStatusEnum.PENDING;
      UserEntity userEntity0 = new UserEntity(integer0, "WD}SiQ8\"<", (String) null, ", email=", genderEnum0, "", "WD}SiQ8\"<", (String) null, userStatusEnum0, userTypeEnum0, (String) null, mockDate0, mockDate0);
      String string0 = userEntity0.getAvatar();
      assertNotNull(string0);
      assertEquals("WD}SiQ8\"<", userEntity0.getEmail());
      assertEquals(", email=", userEntity0.getPassword());
      assertEquals("WD}SiQ8\"<", userEntity0.getUsername());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      UserEntity.UserEntityBuilder userEntity_UserEntityBuilder0 = new UserEntity.UserEntityBuilder();
      UserEntity userEntity0 = userEntity_UserEntityBuilder0.build();
      boolean boolean0 = userEntity0.canEqual(userEntity0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      UserEntity.UserEntityBuilder userEntity_UserEntityBuilder0 = UserEntity.builder();
      UserEntity userEntity0 = userEntity_UserEntityBuilder0.build();
      boolean boolean0 = userEntity0.canEqual(";/");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      UserEntity.UserEntityBuilder userEntity_UserEntityBuilder0 = UserEntity.builder();
      UserEntity userEntity0 = userEntity_UserEntityBuilder0.build();
      String string0 = userEntity0.getMobile();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      UserEntity.UserEntityBuilder userEntity_UserEntityBuilder0 = UserEntity.builder();
      UserEntity userEntity0 = userEntity_UserEntityBuilder0.build();
      String string0 = userEntity0.getRemark();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      UserEntity.UserEntityBuilder userEntity_UserEntityBuilder0 = new UserEntity.UserEntityBuilder();
      UserEntity userEntity0 = userEntity_UserEntityBuilder0.build();
      Date date0 = userEntity0.getUpdateTime();
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Integer integer0 = new Integer((-1));
      GenderEnum genderEnum0 = GenderEnum.MALE;
      UserStatusEnum userStatusEnum0 = UserStatusEnum.PENDING;
      UserTypeEnum userTypeEnum0 = UserTypeEnum.ADMIN;
      MockDate mockDate0 = new MockDate((-1), 3303, (-1));
      UserEntity userEntity0 = new UserEntity(integer0, "V|%{N(H~*:?E5*]ma", ", status=", "", genderEnum0, "", "", "E(Sy?7gZop<,(", userStatusEnum0, userTypeEnum0, "V|%{N(H~*:?E5*]ma", mockDate0, mockDate0);
      userEntity0.getStatus();
      assertEquals(", status=", userEntity0.getNickname());
      assertEquals("", userEntity0.getAvatar());
      assertEquals("", userEntity0.getPassword());
      assertEquals("E(Sy?7gZop<,(", userEntity0.getMobile());
      assertEquals("V|%{N(H~*:?E5*]ma", userEntity0.getUsername());
      assertEquals("", userEntity0.getEmail());
      assertEquals("V|%{N(H~*:?E5*]ma", userEntity0.getRemark());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      UserEntity.UserEntityBuilder userEntity_UserEntityBuilder0 = new UserEntity.UserEntityBuilder();
      UserEntity userEntity0 = userEntity_UserEntityBuilder0.build();
      String string0 = userEntity0.getPassword();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      UserEntity.UserEntityBuilder userEntity_UserEntityBuilder0 = UserEntity.builder();
      UserEntity userEntity0 = userEntity_UserEntityBuilder0.build();
      String string0 = userEntity0.getEmail();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      UserEntity.UserEntityBuilder userEntity_UserEntityBuilder0 = new UserEntity.UserEntityBuilder();
      UserEntity userEntity0 = userEntity_UserEntityBuilder0.build();
      String string0 = userEntity0.getNickname();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      UserEntity.UserEntityBuilder userEntity_UserEntityBuilder0 = UserEntity.builder();
      UserEntity userEntity0 = userEntity_UserEntityBuilder0.build();
      Date date0 = userEntity0.getCreateTime();
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      UserEntity.UserEntityBuilder userEntity_UserEntityBuilder0 = UserEntity.builder();
      UserEntity userEntity0 = userEntity_UserEntityBuilder0.build();
      userEntity0.getGender();
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Integer integer0 = new Integer(1217);
      GenderEnum genderEnum0 = GenderEnum.OTHER;
      UserStatusEnum userStatusEnum0 = UserStatusEnum.ACTIVE;
      Instant instant0 = MockInstant.now();
      Date date0 = Date.from(instant0);
      UserTypeEnum userTypeEnum0 = UserTypeEnum.USER;
      UserEntity userEntity0 = new UserEntity(integer0, (String) null, (String) null, (String) null, genderEnum0, "Q6}o]", ":4.|vl?\"u]wc:{7Td", (String) null, userStatusEnum0, userTypeEnum0, ":4.|vl?\"u]wc:{7Td", date0, date0);
      userEntity0.getId();
      assertEquals(":4.|vl?\"u]wc:{7Td", userEntity0.getRemark());
      assertEquals(":4.|vl?\"u]wc:{7Td", userEntity0.getEmail());
      assertEquals("Q6}o]", userEntity0.getAvatar());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      UserEntity.UserEntityBuilder userEntity_UserEntityBuilder0 = new UserEntity.UserEntityBuilder();
      UserEntity userEntity0 = userEntity_UserEntityBuilder0.build();
      userEntity0.getRole();
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      UserEntity userEntity0 = new UserEntity();
      String string0 = userEntity0.getUsername();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Integer integer0 = new Integer(1217);
      GenderEnum genderEnum0 = GenderEnum.OTHER;
      UserStatusEnum userStatusEnum0 = UserStatusEnum.ACTIVE;
      UserTypeEnum userTypeEnum0 = UserTypeEnum.TEACHER;
      MockDate mockDate0 = new MockDate(1217);
      UserEntity userEntity0 = new UserEntity(integer0, (String) null, (String) null, (String) null, genderEnum0, (String) null, (String) null, (String) null, userStatusEnum0, userTypeEnum0, (String) null, mockDate0, mockDate0);
      String string0 = userEntity0.getAvatar();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      UserEntity userEntity0 = new UserEntity();
      UserEntity userEntity1 = new UserEntity();
      assertTrue(userEntity1.equals((Object)userEntity0));
      
      MockDate mockDate0 = new MockDate();
      userEntity1.setUpdateTime(mockDate0);
      boolean boolean0 = userEntity0.equals(userEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      UserEntity.UserEntityBuilder userEntity_UserEntityBuilder0 = UserEntity.builder();
      MockDate mockDate0 = new MockDate(1, 1, (-711));
      UserEntity.UserEntityBuilder userEntity_UserEntityBuilder1 = userEntity_UserEntityBuilder0.updateTime(mockDate0);
      UserEntity userEntity0 = userEntity_UserEntityBuilder1.build();
      UserEntity userEntity1 = userEntity_UserEntityBuilder0.build();
      boolean boolean0 = userEntity0.equals(userEntity1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      UserEntity userEntity0 = new UserEntity();
      MockDate mockDate0 = new MockDate(681, 681, 681);
      userEntity0.setCreateTime(mockDate0);
      UserEntity userEntity1 = new UserEntity();
      assertFalse(userEntity1.equals((Object)userEntity0));
      
      userEntity1.setCreateTime(mockDate0);
      boolean boolean0 = userEntity0.equals(userEntity1);
      assertTrue(userEntity1.equals((Object)userEntity0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      UserEntity userEntity0 = new UserEntity();
      UserEntity userEntity1 = new UserEntity();
      assertTrue(userEntity1.equals((Object)userEntity0));
      
      MockDate mockDate0 = new MockDate();
      userEntity1.setCreateTime(mockDate0);
      boolean boolean0 = userEntity0.equals(userEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      UserEntity userEntity0 = new UserEntity();
      UserEntity userEntity1 = new UserEntity();
      assertTrue(userEntity1.equals((Object)userEntity0));
      
      MockDate mockDate0 = new MockDate();
      userEntity1.setCreateTime(mockDate0);
      boolean boolean0 = userEntity1.equals(userEntity0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      UserEntity userEntity0 = new UserEntity();
      UserEntity userEntity1 = new UserEntity();
      assertTrue(userEntity1.equals((Object)userEntity0));
      
      userEntity1.setRemark("mx\"WMmpPMxV=#w'-t");
      boolean boolean0 = userEntity0.equals(userEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      UserEntity userEntity0 = new UserEntity();
      userEntity0.setRemark("1oEbuMv)C2`S09");
      UserEntity userEntity1 = new UserEntity();
      boolean boolean0 = userEntity0.equals(userEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      UserEntity userEntity0 = new UserEntity();
      UserEntity userEntity1 = new UserEntity();
      UserTypeEnum userTypeEnum0 = UserTypeEnum.ADMIN;
      userEntity0.setRole(userTypeEnum0);
      assertFalse(userEntity0.equals((Object)userEntity1));
      
      userEntity1.setRole(userTypeEnum0);
      boolean boolean0 = userEntity0.equals(userEntity1);
      assertTrue(userEntity0.equals((Object)userEntity1));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      UserEntity userEntity0 = new UserEntity();
      UserEntity userEntity1 = new UserEntity();
      assertTrue(userEntity1.equals((Object)userEntity0));
      
      UserTypeEnum userTypeEnum0 = UserTypeEnum.ADMIN;
      userEntity1.setRole(userTypeEnum0);
      boolean boolean0 = userEntity0.equals(userEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      UserEntity userEntity0 = new UserEntity();
      UserEntity userEntity1 = new UserEntity();
      assertTrue(userEntity1.equals((Object)userEntity0));
      
      UserTypeEnum userTypeEnum0 = UserTypeEnum.USER;
      userEntity1.setRole(userTypeEnum0);
      boolean boolean0 = userEntity1.equals(userEntity0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      UserEntity userEntity0 = new UserEntity();
      UserStatusEnum userStatusEnum0 = UserStatusEnum.ACTIVE;
      userEntity0.setStatus(userStatusEnum0);
      UserEntity userEntity1 = new UserEntity();
      assertFalse(userEntity1.equals((Object)userEntity0));
      
      userEntity1.setStatus(userStatusEnum0);
      boolean boolean0 = userEntity1.equals(userEntity0);
      assertTrue(userEntity1.equals((Object)userEntity0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      UserEntity userEntity0 = new UserEntity();
      UserEntity userEntity1 = new UserEntity();
      assertTrue(userEntity1.equals((Object)userEntity0));
      
      UserStatusEnum userStatusEnum0 = UserStatusEnum.INACTIVE;
      userEntity1.setStatus(userStatusEnum0);
      boolean boolean0 = userEntity0.equals(userEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      UserEntity userEntity0 = new UserEntity();
      UserEntity userEntity1 = new UserEntity();
      assertTrue(userEntity1.equals((Object)userEntity0));
      
      UserStatusEnum userStatusEnum0 = UserStatusEnum.PENDING;
      userEntity1.setStatus(userStatusEnum0);
      boolean boolean0 = userEntity1.equals(userEntity0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      UserEntity userEntity0 = new UserEntity();
      userEntity0.setMobile("USER");
      UserEntity userEntity1 = new UserEntity();
      boolean boolean0 = userEntity0.equals(userEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      UserEntity.UserEntityBuilder userEntity_UserEntityBuilder0 = UserEntity.builder();
      userEntity_UserEntityBuilder0.mobile("CDQcDqB2s=#X@");
      UserEntity userEntity0 = userEntity_UserEntityBuilder0.build();
      UserEntity userEntity1 = userEntity_UserEntityBuilder0.build();
      boolean boolean0 = userEntity0.equals(userEntity1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      UserEntity userEntity0 = new UserEntity();
      userEntity0.setEmail("sf?Au0\"LC6U");
      UserEntity userEntity1 = new UserEntity();
      boolean boolean0 = userEntity0.equals(userEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      UserEntity userEntity0 = new UserEntity();
      UserEntity userEntity1 = new UserEntity();
      assertTrue(userEntity1.equals((Object)userEntity0));
      
      userEntity1.setAvatar("");
      boolean boolean0 = userEntity0.equals(userEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      UserEntity userEntity0 = new UserEntity();
      UserEntity userEntity1 = new UserEntity();
      assertTrue(userEntity1.equals((Object)userEntity0));
      
      GenderEnum genderEnum0 = GenderEnum.FEMALE;
      userEntity1.setGender(genderEnum0);
      boolean boolean0 = userEntity0.equals(userEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      UserEntity userEntity0 = new UserEntity();
      userEntity0.setPassword("Sb'U9");
      UserEntity userEntity1 = new UserEntity();
      boolean boolean0 = userEntity0.equals(userEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      UserEntity userEntity0 = new UserEntity();
      UserEntity userEntity1 = new UserEntity();
      userEntity0.setNickname("@qjt7.y1(Xb974!");
      assertFalse(userEntity0.equals((Object)userEntity1));
      
      userEntity1.setNickname("@qjt7.y1(Xb974!");
      boolean boolean0 = userEntity0.equals(userEntity1);
      assertTrue(userEntity0.equals((Object)userEntity1));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      UserEntity userEntity0 = new UserEntity();
      UserEntity userEntity1 = new UserEntity();
      assertTrue(userEntity1.equals((Object)userEntity0));
      
      userEntity1.setNickname("=ORB#cwgtAs");
      boolean boolean0 = userEntity0.equals(userEntity1);
      assertFalse(userEntity1.equals((Object)userEntity0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      UserEntity userEntity0 = new UserEntity();
      userEntity0.setUsername("");
      UserEntity userEntity1 = new UserEntity();
      assertFalse(userEntity1.equals((Object)userEntity0));
      
      userEntity1.setUsername("");
      boolean boolean0 = userEntity0.equals(userEntity1);
      assertTrue(userEntity1.equals((Object)userEntity0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      UserEntity userEntity0 = new UserEntity();
      UserEntity userEntity1 = new UserEntity();
      assertTrue(userEntity1.equals((Object)userEntity0));
      
      userEntity1.setUsername("USBF;hl1t=l");
      boolean boolean0 = userEntity0.equals(userEntity1);
      assertFalse(userEntity1.equals((Object)userEntity0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      UserEntity userEntity0 = new UserEntity();
      UserEntity userEntity1 = new UserEntity();
      assertTrue(userEntity1.equals((Object)userEntity0));
      
      Integer integer0 = new Integer(0);
      userEntity1.setId(integer0);
      boolean boolean0 = userEntity0.equals(userEntity1);
      assertFalse(userEntity1.equals((Object)userEntity0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      UserEntity userEntity0 = new UserEntity();
      Integer integer0 = new Integer(0);
      UserEntity userEntity1 = new UserEntity();
      assertTrue(userEntity1.equals((Object)userEntity0));
      
      userEntity1.setId(integer0);
      boolean boolean0 = userEntity1.equals(userEntity0);
      assertFalse(userEntity1.equals((Object)userEntity0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      UserEntity.UserEntityBuilder userEntity_UserEntityBuilder0 = new UserEntity.UserEntityBuilder();
      UserEntity userEntity0 = userEntity_UserEntityBuilder0.build();
      boolean boolean0 = userEntity0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      UserEntity userEntity0 = new UserEntity();
      boolean boolean0 = userEntity0.equals(userEntity0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      UserTypeEnum userTypeEnum0 = UserTypeEnum.TEACHER;
      Integer integer0 = new Integer(1);
      UserStatusEnum userStatusEnum0 = UserStatusEnum.INACTIVE;
      GenderEnum genderEnum0 = GenderEnum.FEMALE;
      MockDate mockDate0 = new MockDate();
      UserEntity userEntity0 = new UserEntity(integer0, "\u6FC0\u6D3B", "\u6FC0\u6D3B", "\u6FC0\u6D3B", genderEnum0, "\u6FC0\u6D3B", "(tbM &B4", "(tbM &B4", userStatusEnum0, userTypeEnum0, "(tbM &B4", mockDate0, mockDate0);
      userEntity0.hashCode();
      assertEquals("\u6FC0\u6D3B", userEntity0.getPassword());
      assertEquals("(tbM &B4", userEntity0.getRemark());
      assertEquals("\u6FC0\u6D3B", userEntity0.getUsername());
      assertEquals("\u6FC0\u6D3B", userEntity0.getAvatar());
      assertEquals("\u6FC0\u6D3B", userEntity0.getNickname());
      assertEquals("(tbM &B4", userEntity0.getEmail());
      assertEquals("(tbM &B4", userEntity0.getMobile());
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      UserTypeEnum userTypeEnum0 = UserTypeEnum.TEACHER;
      GenderEnum genderEnum0 = GenderEnum.FEMALE;
      UserStatusEnum userStatusEnum0 = UserStatusEnum.PENDING;
      MockDate mockDate0 = new MockDate(1, 289, 289);
      UserEntity userEntity0 = new UserEntity((Integer) null, "R[Evd{L 0j*", (String) null, (String) null, genderEnum0, "", "", "5\u0006(z", userStatusEnum0, userTypeEnum0, "eHXHx~H*", mockDate0, mockDate0);
      userEntity0.hashCode();
      assertEquals("", userEntity0.getAvatar());
      assertEquals("eHXHx~H*", userEntity0.getRemark());
      assertEquals("R[Evd{L 0j*", userEntity0.getUsername());
      assertEquals("5\u0006(z", userEntity0.getMobile());
      assertEquals("", userEntity0.getEmail());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      UserEntity.UserEntityBuilder userEntity_UserEntityBuilder0 = new UserEntity.UserEntityBuilder();
      UserEntity userEntity0 = userEntity_UserEntityBuilder0.build();
      userEntity0.hashCode();
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      UserEntity.UserEntityBuilder userEntity_UserEntityBuilder0 = UserEntity.builder();
      String string0 = userEntity_UserEntityBuilder0.toString();
      assertEquals("UserEntity.UserEntityBuilder(id=null, username=null, nickname=null, password=null, gender=null, avatar=null, email=null, mobile=null, status=null, role=null, remark=null, createTime=null, updateTime=null)", string0);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      UserEntity.UserEntityBuilder userEntity_UserEntityBuilder0 = UserEntity.builder();
      UserEntity.UserEntityBuilder userEntity_UserEntityBuilder1 = userEntity_UserEntityBuilder0.avatar("");
      UserEntity userEntity0 = userEntity_UserEntityBuilder1.build();
      UserEntity userEntity1 = userEntity_UserEntityBuilder0.build();
      boolean boolean0 = userEntity0.equals(userEntity1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      UserEntity.UserEntityBuilder userEntity_UserEntityBuilder0 = UserEntity.builder();
      UserStatusEnum userStatusEnum0 = UserStatusEnum.PENDING;
      UserEntity.UserEntityBuilder userEntity_UserEntityBuilder1 = userEntity_UserEntityBuilder0.status(userStatusEnum0);
      assertSame(userEntity_UserEntityBuilder1, userEntity_UserEntityBuilder0);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      UserEntity.UserEntityBuilder userEntity_UserEntityBuilder0 = UserEntity.builder();
      userEntity_UserEntityBuilder0.password("68!<");
      UserEntity userEntity0 = userEntity_UserEntityBuilder0.build();
      UserEntity userEntity1 = userEntity_UserEntityBuilder0.build();
      boolean boolean0 = userEntity0.equals(userEntity1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      UserEntity.UserEntityBuilder userEntity_UserEntityBuilder0 = UserEntity.builder();
      userEntity_UserEntityBuilder0.remark("8&GOnR=.vf#");
      UserEntity userEntity0 = userEntity_UserEntityBuilder0.build();
      UserEntity userEntity1 = userEntity_UserEntityBuilder0.build();
      boolean boolean0 = userEntity0.equals(userEntity1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      UserEntity.UserEntityBuilder userEntity_UserEntityBuilder0 = new UserEntity.UserEntityBuilder();
      UserTypeEnum userTypeEnum0 = UserTypeEnum.STUDENT;
      UserEntity.UserEntityBuilder userEntity_UserEntityBuilder1 = userEntity_UserEntityBuilder0.role(userTypeEnum0);
      assertSame(userEntity_UserEntityBuilder1, userEntity_UserEntityBuilder0);
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      UserEntity.UserEntityBuilder userEntity_UserEntityBuilder0 = UserEntity.builder();
      UserEntity.UserEntityBuilder userEntity_UserEntityBuilder1 = userEntity_UserEntityBuilder0.email("68!<");
      UserEntity userEntity0 = userEntity_UserEntityBuilder1.build();
      UserEntity userEntity1 = userEntity_UserEntityBuilder0.build();
      boolean boolean0 = userEntity0.equals(userEntity1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      UserEntity.UserEntityBuilder userEntity_UserEntityBuilder0 = new UserEntity.UserEntityBuilder();
      UserEntity.UserEntityBuilder userEntity_UserEntityBuilder1 = userEntity_UserEntityBuilder0.createTime((Date) null);
      assertSame(userEntity_UserEntityBuilder1, userEntity_UserEntityBuilder0);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      UserEntity.UserEntityBuilder userEntity_UserEntityBuilder0 = UserEntity.builder();
      GenderEnum genderEnum0 = GenderEnum.MALE;
      userEntity_UserEntityBuilder0.gender(genderEnum0);
      UserEntity userEntity0 = userEntity_UserEntityBuilder0.build();
      UserEntity userEntity1 = userEntity_UserEntityBuilder0.build();
      boolean boolean0 = userEntity0.equals(userEntity1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      UserEntity userEntity0 = new UserEntity();
      MockDate mockDate0 = new MockDate();
      userEntity0.setCreateTime(mockDate0);
      Date date0 = userEntity0.getCreateTime();
      assertSame(date0, mockDate0);
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      UserEntity userEntity0 = new UserEntity();
      String string0 = userEntity0.toString();
      assertEquals("UserEntity(id=null, username=null, nickname=null, password=null, gender=null, avatar=null, email=null, mobile=null, status=null, role=null, remark=null, createTime=null, updateTime=null)", string0);
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      UserEntity userEntity0 = new UserEntity();
      userEntity0.setNickname("33E16");
      UserEntity userEntity1 = new UserEntity();
      boolean boolean0 = userEntity0.equals(userEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      UserEntity userEntity0 = new UserEntity();
      MockDate mockDate0 = new MockDate();
      userEntity0.setUpdateTime(mockDate0);
      UserEntity userEntity1 = new UserEntity();
      boolean boolean0 = userEntity0.equals(userEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      UserEntity userEntity0 = new UserEntity();
      userEntity0.setAvatar("");
      UserEntity userEntity1 = new UserEntity();
      boolean boolean0 = userEntity0.equals(userEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      UserEntity userEntity0 = new UserEntity();
      GenderEnum genderEnum0 = GenderEnum.MALE;
      userEntity0.setGender(genderEnum0);
      UserEntity userEntity1 = new UserEntity();
      boolean boolean0 = userEntity0.equals(userEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      UserEntity.UserEntityBuilder userEntity_UserEntityBuilder0 = UserEntity.builder();
      UserEntity userEntity0 = userEntity_UserEntityBuilder0.build();
      UserEntity.UserEntityBuilder userEntity_UserEntityBuilder1 = userEntity_UserEntityBuilder0.mobile("68!<");
      UserEntity userEntity1 = userEntity_UserEntityBuilder1.build();
      boolean boolean0 = userEntity0.equals(userEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      UserEntity userEntity0 = new UserEntity();
      userEntity0.setUsername("");
      UserEntity userEntity1 = new UserEntity();
      boolean boolean0 = userEntity0.equals(userEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      UserEntity userEntity0 = new UserEntity();
      userEntity0.setPassword("@%3,/3~W$Iy3GM.");
      UserEntity userEntity1 = new UserEntity();
      boolean boolean0 = userEntity1.equals(userEntity0);
      assertFalse(boolean0);
      assertFalse(userEntity0.equals((Object)userEntity1));
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      UserEntity userEntity0 = new UserEntity();
      Integer integer0 = new Integer(0);
      userEntity0.setId(integer0);
      UserEntity userEntity1 = new UserEntity();
      assertFalse(userEntity1.equals((Object)userEntity0));
      
      userEntity1.setId(integer0);
      boolean boolean0 = userEntity1.equals(userEntity0);
      assertTrue(userEntity1.equals((Object)userEntity0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      UserEntity userEntity0 = new UserEntity();
      userEntity0.setEmail("=");
      UserEntity userEntity1 = new UserEntity();
      boolean boolean0 = userEntity1.equals(userEntity0);
      assertFalse(boolean0);
  }
}
