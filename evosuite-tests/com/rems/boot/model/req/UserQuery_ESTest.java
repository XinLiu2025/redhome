/*
 * This file was automatically generated by EvoSuite
 * Wed Feb 12 15:36:12 GMT 2025
 */

package com.rems.boot.model.req;

import org.junit.Test;
import static org.junit.Assert.*;
import com.rems.boot.enums.UserTypeEnum;
import com.rems.boot.model.req.UserQuery;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class UserQuery_ESTest extends UserQuery_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      UserQuery userQuery0 = new UserQuery(boolean0);
      Boolean boolean1 = new Boolean(true);
      userQuery0.setIsAdmin(boolean1);
      Boolean boolean2 = userQuery0.getIsAdmin();
      assertFalse(boolean2.equals((Object)boolean0));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      UserQuery userQuery0 = new UserQuery((Boolean) null);
      Boolean boolean0 = userQuery0.getIsAdmin();
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      UserQuery userQuery0 = new UserQuery(boolean0);
      boolean boolean1 = userQuery0.canEqual(userQuery0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      UserQuery userQuery0 = new UserQuery(boolean0);
      Object object0 = new Object();
      boolean boolean1 = userQuery0.canEqual(object0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      UserQuery userQuery0 = new UserQuery(boolean0);
      Boolean boolean1 = userQuery0.getIsAdmin();
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      UserQuery userQuery0 = new UserQuery(boolean0);
      UserQuery userQuery1 = new UserQuery();
      boolean boolean1 = userQuery0.equals(userQuery1);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      UserQuery userQuery0 = new UserQuery();
      UserQuery userQuery1 = new UserQuery((Boolean) null);
      boolean boolean0 = userQuery1.equals(userQuery0);
      assertFalse(userQuery0.getIsAdmin());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      UserQuery userQuery0 = new UserQuery(boolean0);
      UserTypeEnum userTypeEnum0 = UserTypeEnum.USER;
      userQuery0.setRole(userTypeEnum0);
      UserQuery userQuery1 = new UserQuery();
      boolean boolean1 = userQuery0.equals(userQuery1);
      assertFalse(boolean1);
      assertFalse(userQuery1.getIsAdmin());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      UserQuery userQuery0 = new UserQuery(boolean0);
      boolean boolean1 = userQuery0.equals(boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      UserQuery userQuery0 = new UserQuery();
      boolean boolean0 = userQuery0.equals(userQuery0);
      assertFalse(userQuery0.getIsAdmin());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      UserQuery userQuery0 = new UserQuery(boolean0);
      userQuery0.hashCode();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      UserQuery userQuery0 = new UserQuery();
      UserQuery userQuery1 = new UserQuery();
      boolean boolean0 = userQuery0.equals(userQuery1);
      assertTrue(boolean0);
      assertFalse(userQuery1.getIsAdmin());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      UserQuery userQuery0 = new UserQuery();
      String string0 = userQuery0.toString();
      assertEquals("UserQuery(isAdmin=false)", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      UserQuery userQuery0 = new UserQuery((Boolean) null);
      userQuery0.hashCode();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      UserQuery userQuery0 = new UserQuery();
      assertFalse(userQuery0.getIsAdmin());
      
      userQuery0.setIsAdmin((Boolean) null);
      UserQuery userQuery1 = new UserQuery((Boolean) null);
      boolean boolean0 = userQuery1.equals(userQuery0);
      assertTrue(boolean0);
  }
}
