/*
 * This file was automatically generated by EvoSuite
 * Wed Feb 12 15:48:29 GMT 2025
 */

package com.rems.boot.core;

import org.junit.Test;
import static org.junit.Assert.*;
import com.rems.boot.core.LayResult;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LayResult_ESTest extends LayResult_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LayResult<Object> layResult0 = new LayResult<Object>();
      String string0 = layResult0.getMsg();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LayResult<Object> layResult0 = LayResult.error("");
      layResult0.getMsg();
      assertEquals(0L, (long)layResult0.getCount());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      LayResult<Object> layResult0 = LayResult.success((List<Object>) linkedList0, (Long) null);
      layResult0.getData();
      assertEquals("success", layResult0.getMsg());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LayResult<LayResult<Object>> layResult0 = LayResult.success();
      Long long0 = layResult0.getCount();
      assertEquals("success", layResult0.getMsg());
      assertEquals(0L, (long)long0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Long long0 = new Long(46L);
      LinkedList<LayResult<Object>> linkedList0 = new LinkedList<LayResult<Object>>();
      LayResult<LayResult<Object>> layResult0 = new LayResult<LayResult<Object>>((Integer) null, "success", long0, linkedList0);
      Long long1 = layResult0.getCount();
      assertEquals(46L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LayResult<Object> layResult0 = new LayResult<Object>();
      Long long0 = layResult0.getCount();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LayResult<Object> layResult0 = LayResult.error("y;NS#<1\"#EVseG+");
      layResult0.getCode();
      assertEquals(0L, (long)layResult0.getCount());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Long long0 = new Long((-606L));
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      LayResult<Integer> layResult0 = new LayResult<Integer>((Integer) null, "success", long0, linkedList0);
      Integer integer0 = layResult0.getCode();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Integer integer0 = new Integer((-1213));
      Long long0 = new Long(3615L);
      LayResult<Integer> layResult0 = new LayResult<Integer>(integer0, "82m#J", long0, linkedList0);
      Integer integer1 = layResult0.getCode();
      assertEquals((-1213), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      Long long0 = new Long((-1L));
      LayResult<Object> layResult0 = new LayResult<Object>((Integer) null, "", long0, linkedList0);
      LayResult<LayResult<Integer>> layResult1 = LayResult.error("Z?4E1W*>0$ vgC");
      layResult0.canEqual(layResult1);
      assertEquals(0L, (long)layResult1.getCount());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LayResult<Object> layResult0 = LayResult.error("kvz+1o&^Tiaek");
      Object object0 = new Object();
      layResult0.canEqual(object0);
      assertEquals(0L, (long)layResult0.getCount());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LinkedList<LayResult<Object>> linkedList0 = new LinkedList<LayResult<Object>>();
      Long long0 = new Long((-606L));
      LayResult<LayResult<Object>> layResult0 = LayResult.success((List<LayResult<Object>>) linkedList0, long0);
      layResult0.getCount();
      assertEquals("success", layResult0.getMsg());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LayResult<Object> layResult0 = LayResult.success();
      String string0 = layResult0.getMsg();
      assertEquals(0L, (long)layResult0.getCount());
      assertEquals("success", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Long long0 = Long.getLong("]?Z`\"L/[D@", 1L);
      LayResult<Integer> layResult0 = LayResult.success((List<Integer>) linkedList0, long0);
      layResult0.getCode();
      assertEquals("success", layResult0.getMsg());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LayResult<Object> layResult0 = new LayResult<Object>();
      List<Object> list0 = layResult0.getData();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LayResult<Object> layResult0 = new LayResult<Object>();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      layResult0.setData(linkedList0);
      LayResult<Integer> layResult1 = new LayResult<Integer>();
      LinkedList<Integer> linkedList1 = new LinkedList<Integer>();
      layResult1.setData(linkedList1);
      boolean boolean0 = layResult0.equals(layResult1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LayResult<Object> layResult0 = new LayResult<Object>();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      layResult0.setData(linkedList0);
      LayResult<Integer> layResult1 = new LayResult<Integer>();
      boolean boolean0 = layResult1.equals(layResult0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LayResult<Object> layResult0 = new LayResult<Object>();
      LayResult<Integer> layResult1 = new LayResult<Integer>();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      layResult1.setData(linkedList0);
      boolean boolean0 = layResult1.equals(layResult0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LayResult<Object> layResult0 = new LayResult<Object>();
      LayResult<Integer> layResult1 = new LayResult<Integer>();
      layResult1.setMsg("$VALUES");
      boolean boolean0 = layResult1.equals(layResult0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LayResult<Object> layResult0 = new LayResult<Object>();
      layResult0.setMsg("`c~05");
      LayResult<Integer> layResult1 = new LayResult<Integer>();
      boolean boolean0 = layResult1.equals(layResult0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LayResult<Object> layResult0 = new LayResult<Object>();
      Long long0 = new Long(131L);
      layResult0.setCount(long0);
      LayResult<Integer> layResult1 = new LayResult<Integer>();
      boolean boolean0 = layResult1.equals(layResult0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LayResult<Integer> layResult0 = LayResult.success();
      LayResult<Integer> layResult1 = new LayResult<Integer>();
      boolean boolean0 = layResult0.equals(layResult1);
      assertFalse(boolean0);
      assertEquals(0L, (long)layResult0.getCount());
      assertEquals("success", layResult0.getMsg());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LayResult<Object> layResult0 = LayResult.success();
      LayResult<Integer> layResult1 = new LayResult<Integer>();
      boolean boolean0 = layResult1.equals(layResult0);
      assertEquals("success", layResult0.getMsg());
      assertFalse(boolean0);
      assertEquals(0L, (long)layResult0.getCount());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LayResult<Object> layResult0 = new LayResult<Object>();
      LayResult<Integer> layResult1 = new LayResult<Integer>();
      boolean boolean0 = layResult1.equals(layResult0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LayResult<Object> layResult0 = LayResult.error("kvz+1o&^Tiaek");
      Object object0 = new Object();
      boolean boolean0 = layResult0.equals(object0);
      assertEquals(0L, (long)layResult0.getCount());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LayResult<Integer> layResult0 = new LayResult<Integer>();
      boolean boolean0 = layResult0.equals(layResult0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      LayResult<Object> layResult0 = LayResult.success((List<Object>) linkedList0, (Long) null);
      layResult0.hashCode();
      assertEquals("success", layResult0.getMsg());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LayResult<Integer> layResult0 = new LayResult<Integer>();
      layResult0.hashCode();
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      LayResult<Object> layResult0 = LayResult.success();
      layResult0.hashCode();
      assertEquals(0L, (long)layResult0.getCount());
      assertEquals("success", layResult0.getMsg());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      LayResult<Object> layResult0 = LayResult.error("kvz+1o&^Tiaek");
      String string0 = layResult0.toString();
      assertEquals("LayResult(code=1, msg=kvz+1o&^Tiaek, count=0, data=null)", string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      LayResult<Integer> layResult0 = LayResult.error("2$Y%]R'ADM");
      Integer integer0 = new Integer(0);
      layResult0.setCode(integer0);
      assertEquals(0L, (long)layResult0.getCount());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      LayResult<Integer> layResult0 = new LayResult<Integer>();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      layResult0.setData(linkedList0);
      Integer integer0 = new Integer((-2699));
      linkedList0.add(integer0);
      List<Integer> list0 = layResult0.getData();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      LayResult<Integer> layResult0 = LayResult.success();
      layResult0.setCount((Long) null);
      LayResult<LayResult<Integer>> layResult1 = LayResult.success();
      boolean boolean0 = layResult1.equals(layResult0);
      assertEquals(0L, (long)layResult1.getCount());
      assertFalse(boolean0);
      assertEquals("success", layResult1.getMsg());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      LayResult<Object> layResult0 = LayResult.success();
      LayResult<LayResult<Object>> layResult1 = LayResult.success();
      boolean boolean0 = layResult0.equals(layResult1);
      assertEquals(0L, (long)layResult1.getCount());
      assertTrue(boolean0);
      assertEquals("success", layResult1.getMsg());
  }
}
